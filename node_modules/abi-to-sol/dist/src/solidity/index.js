"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateSolidity = exports.GenerateSolidityMode = exports.defaults = void 0;
const declarations_1 = require("../declarations");
const defaults = __importStar(require("./defaults"));
exports.defaults = defaults;
const Features = __importStar(require("./features"));
const generate_1 = require("./generate");
const analyze_1 = require("./analyze");
var options_1 = require("./options");
Object.defineProperty(exports, "GenerateSolidityMode", { enumerable: true, get: function () { return options_1.GenerateSolidityMode; } });
let prettier;
try {
    prettier = require("prettier");
}
catch (_a) {
    // no-op
}
const generateSolidity = ({ abi, name = defaults.name, solidityVersion = defaults.solidityVersion, license = defaults.license, mode = defaults.mode, outputAttribution = defaults.outputAttribution, outputSource = defaults.outputSource, prettifyOutput = prettier && defaults.prettifyOutput, }) => {
    if (!prettier && prettifyOutput) {
        throw new Error("Could not require() prettier");
    }
    const versionsFeatures = Features.forRange(solidityVersion);
    const abiProperties = (0, analyze_1.analyze)(abi);
    const declarations = declarations_1.Declarations.collect(abi);
    const raw = (0, generate_1.generateRawSolidity)(abi, {
        name,
        solidityVersion,
        license,
        mode,
        outputAttribution,
        outputSource,
        versionsFeatures,
        abiProperties,
        declarations
    });
    if (!prettifyOutput) {
        return raw;
    }
    try {
        return prettier.format(raw, {
            plugins: ["prettier-plugin-solidity"],
            // @ts-ignore
            parser: "solidity-parse",
        });
    }
    catch (error) {
        return raw;
    }
};
exports.generateSolidity = generateSolidity;
//# sourceMappingURL=index.js.map