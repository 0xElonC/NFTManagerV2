"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.forRange = exports.isBooleanCategory = exports.allFeatures = void 0;
const semver = __importStar(require("semver"));
exports.allFeatures = {
    "receive-keyword": {
        ">=0.6.0": true,
        "<0.6.0": false
    },
    "fallback-keyword": {
        ">=0.6.0": true,
        "<0.6.0": false
    },
    "array-parameter-location": {
        ">=0.7.0": "memory",
        "^0.5.0 || ^0.6.0": "calldata",
        "<0.5.0": undefined
    },
    "abiencoder-v2": {
        ">=0.8.0": "default",
        "<0.8.0": "experimental",
    },
    "global-structs": {
        ">=0.6.0": true,
        "<0.6.0": false
    },
    "structs-in-interfaces": {
        ">=0.5.0": true,
        "<0.5.0": false
    },
    "custom-errors": {
        ">=0.8.4": true,
        "<0.8.4": false
    },
    "user-defined-value-types": {
        ">=0.8.8": true,
        "<0.8.8": false
    }
};
const isBooleanCategory = (category) => {
    return Object.values(exports.allFeatures[category])
        .every(option => option === true || option === false);
};
exports.isBooleanCategory = isBooleanCategory;
const forRange = (range) => {
    return Object.keys(exports.allFeatures)
        .map((category) => {
        const specification = exports.allFeatures[category];
        const matchingRanges = Object.keys(specification)
            .filter(optionRange => semver.intersects(range, optionRange));
        const matchingOptions = [...new Set(matchingRanges.map(range => specification[range]))];
        if ((0, exports.isBooleanCategory)(category)) {
            return {
                [category]: {
                    supported() {
                        return (matchingOptions.length === 1 &&
                            matchingOptions[0] === true);
                    },
                    missing() {
                        return (matchingOptions.indexOf(true) === -1);
                    },
                    varies() {
                        return matchingOptions.length > 1;
                    }
                }
            };
        }
        return {
            [category]: {
                consistently(option) {
                    if (matchingOptions.length !== 1) {
                        return false;
                    }
                    const [onlyOption] = matchingOptions;
                    return option === onlyOption;
                }
            }
        };
    })
        .reduce((a, b) => (Object.assign(Object.assign({}, a), b)), {});
};
exports.forRange = forRange;
//# sourceMappingURL=features.js.map